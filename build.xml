<?xml version="1.0"?>
<project name="KA Lite Android builder" default="main" basedir=".">

<target name="main" depends="android-vars, python-for-android, kalite-javahandle-copyover, AndroidManifest-tmpl-copyover, PythonActivity-copyover, kivy-icon-copyover, kivy-presplash-copyover, launcher-icon-copyover, icon-copyover, presplash-copyover, distribute,
                             ka-lite, build">

</target>

<target name="android-vars"
        description="ask user about SDK an NDK locations, if locations are not set.
                     set API and NDK versions.">
  <property name="android-api" value="14" />
  <property name="android-ndkver" value="r8c" />

  <input addProperty="android-sdk" message="Type the path to the Android SDK:" />
  <condition property="android-sdk-not-exists">
    <not>
      <available file="${android-sdk}" type="dir" />
    </not>
  </condition>
  <fail if="android-sdk-not-exists" message="Invalid SDK path" />

  <input addProperty="android-ndk" message="Type the path to the Android NDK:" />
  <condition property="android-ndk-not-exists">
    <not>
      <available file="${android-ndk}" type="dir" />
    </not>
  </condition>
  <fail if="android-ndk-not-exists" message="Invalid NDK path" />
</target>

<target name="check-python-for-android">
  <condition property="python-for-android-exists">
      <available file="python-for-android" type="dir" />
  </condition>
</target>

<target name="python-for-android"
        description="clone the Python for Android repo"
        depends="check-python-for-android"
        unless="python-for-android-exists">
  <exec executable="git" failonerror="true">
    <arg line="clone https://github.com/kivy/python-for-android.git" />
  </exec>
</target>


<target name="kalite-javahandle-copyover"
        description="clone the kalite_javahandle">

  <delete file="python-for-android/src/src/org/kalite_javahandle/JavaHandler.java" />
  <delete file="python-for-android/src/src/org/kalite_javahandle/VersionCode.java" />
  <copy todir="python-for-android/src/src/org" >  
    <fileset dir="copy-over" includes="kalite_javahandle/**"/>  
  </copy>
</target>

<target name="AndroidManifest-tmpl-copyover"
        description="replace the AndroidManifest.tmpl.xml">
  <delete file="python-for-android/src/templates/AndroidManifest.tmpl.xml" />
  <copy file="copy-over/templates/AndroidManifest.tmpl.xml" todir="python-for-android/src/templates" />
</target>
<target name="kivy-icon-copyover"
        description="replace the kivy-icon.png">
  <delete file="python-for-android/src/templates/kivy-icon.png" />
  <copy file="copy-over/templates/kivy-icon.png" todir="python-for-android/src/templates" />
</target>
<target name="kivy-presplash-copyover"
        description="replace the kivy-presplash.jpg">
  <delete file="python-for-android/src/templates/kivy-presplash.jpg" />
  <copy file="copy-over/templates/kivy-presplash.jpg" todir="python-for-android/src/templates" />
</target>
<target name="launcher-icon-copyover"
        description="replace the launcher-icon.png">
  <delete file="python-for-android/src/templates/launcher-icon.png" />
  <copy file="copy-over/templates/launcher-icon.png" todir="python-for-android/src/templates" />
</target>
<target name="icon-copyover"
        description="replace the icon.png">
  <delete file="python-for-android/src/res/drawable/icon.png" />
  <copy file="copy-over/drawable/icon.png" todir="python-for-android/src/res/drawable" />
</target>
<target name="presplash-copyover"
        description="replace the presplash.jpg">
  <delete file="python-for-android/src/res/drawable/presplash.jpg" />
  <copy file="copy-over/drawable/presplash.jpg" todir="python-for-android/src/res/drawable" />
</target>

<target name="PythonActivity-copyover"
        description="replace the PythonActivity.java">
  <delete file="python-for-android/src/src/org/renpy/android/PythonActivity.java" />
  <copy file="copy-over/PythonActivity.java" todir="python-for-android/src/src/org/renpy/android" />
</target>


<target name="check-python-for-android-dist">
  <condition property="python-for-android-dist-exists">
      <available file="python-for-android/dist/default" type="dir" />
  </condition>
</target>

<target name="distribute"
        description="build Python and modules"
        depends="check-python-for-android-dist"
        unless="python-for-android-dist-exists">
  <exec dir="python-for-android" executable="./distribute.sh" failonerror="true">
    <env key="ANDROIDAPI" value="${android-api}" />
    <env key="ANDROIDNDKVER" value="${android-ndkver}" />
    <env key="ANDROIDSDK" value="${android-sdk}" />
    <env key="ANDROIDNDK" value="${android-ndk}" />
    <arg value="-m" />
    <arg value="sqlite3 openssl kivy" />
  </exec>
  <!-- include sqlite3, wsgiref, csv, unittest modules -->
  <replaceregexp file="python-for-android/dist/default/blacklist.txt"
                 match="(^.*wsgiref.*$)|(^.*(sqlite3).*$)|(^.*(_csv).*$)|(^.*(unittest).*$)|(^.*(multiprocessing).*$)|(^.*(thread).*$)|(^.*(a).*$)|(^.*(e).*$)|(^.*(o).*$)|(^.*(s).*$)|(^.*(t).*$)|(^.*(h).*$)|(^.*(d).*$)"
                 replace="#"
                 byline="true" />
</target>

<target name="check-ka-lite">
  <condition property="ka-lite-exists">
      <available file="ka-lite-android/ka-lite.zip" type="file" />
  </condition>
</target>

<target name="ka-lite"
        description="clone the KA Lite repo, zip it"
        depends="check-ka-lite"
        unless="ka-lite-exists">
  <!-- When building the apk, Python for Android will try to compile
       all the .py files (including Django and other KA Lite python-packages/),
       that may lead to strange errors when running this code on Android.
       Zipping serves as a protection for .py files. -->

  <!-- remove self-referencing symbolic link, that could break things -->
  <delete file="ka-lite/kalite/faq/faq" />
  <!-- copy in our local_settings.py file that disables caching, reduces the number of threads, etc -->
  <copy file="local_settings.py" todir="ka-lite/kalite" />
  <!-- shorten long .py filenames now to avoid bad truncation during later build process -->
  <exec executable="python" failonerror="true">
     <arg line="shorten_filenames.py" />
  </exec>
  <!-- build the zip file of the ka-lite codebase 
  <zip destfile="ka-lite-android/ka-lite.zip"
       basedir="ka-lite" /> elielielieli-->
</target>

<target name="build" description="build KA Lite application">
  <property name="app-name" value="Connect.Teaching" />

  <!-- apk version = KA Lite version number -->
  <exec dir="ka-lite/kalite" executable="python" outputproperty="app-version">
    <arg line="-c 'import version; print version.VERSION'" />
  </exec>

  <exec dir="python-for-android/dist/default" executable="./build.py" failonerror="true">
    <env key="ANDROIDAPI" value="${android-api}" />
    <env key="ANDROIDNDKVER" value="${android-ndkver}" />
    <env key="ANDROIDSDK" value="${android-sdk}" />
    <env key="ANDROIDNDK" value="${android-ndk}" />
    <arg line="--package org.kalite.test --name '${app-name}' --version ${app-version}" />
    <arg line="--dir ../../../ka-lite-android/" />
    <arg line="--install-location preferExternal" />
    <arg line="--permission INTERNET" />
    <arg line="debug" />
    <!-- <arg line="installd" /> -->
  </exec>

  <path id="bins-path">
    <pathelement location="python-for-android/dist/default/bin" />
  </path>
  <pathconvert property="converted-bins-path" refid="bins-path" />
  <echo message='Apk is ready, see "${converted-bins-path}" dir' />
</target>

</project>
